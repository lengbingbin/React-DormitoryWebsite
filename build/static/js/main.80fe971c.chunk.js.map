{"version":3,"sources":["images/login.jpg","images/avatar.jpg","page/login/index.js","images/school.jpg","component/LeftNav/index.js","component/Footer/index.js","utils/dateUtils.js","api/index.js","component/LinkButton/index.js","component/Header/index.js","page/damage/index.js","page/score/index.js","page/visitor/index.js","page/dorm/index.js","page/home/index.js","page/student/index.js","page/admin/index.js","component/LeftNav/damleft.js","page/information/index.js","page/welcome/index.js","images/register.jpg","page/register/index.js","page/maintenance/index.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","props","state","onFinish","bind","values","console","log","history","this","axios","post","then","response","sessionStorage","setItem","data","token","per","getItem","result","message","success","push","username","error","catch","err","src","logo","className","name","initialValues","remember","size","avatar","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","htmlType","href","Component","SubMenu","Menu","DLeftNav","style","height","to","image","alt","color","marginLeft","defaultSelectedKeys","defaultOpenKeys","mode","theme","icon","PieChartOutlined","DesktopOutlined","MessageOutlined","ContainerOutlined","CloudOutlined","title","GlobalOutlined","Footer","background","margin","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","reqWeather","city","Promise","resolve","reject","url","jsonp","status","results","weather_data","dayPictureUrl","weather","LinkButton","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","a","logout","Modal","confirm","content","onOk","replace","clearInterval","onClick","withRouter","columns","dataIndex","layout","labelCol","span","wrapperCol","validateMessages","types","number","range","Damage","onSelectChange","selectedRowKeys","ComfirmCancel","confirmvisible","InsertData","value","list","datalist","DeleteData","selectedRows","cancelvisible","ComfirmshowModal","Cancel","CancelshowModal","selectionType","selectedRowsKeys","defaults","headers","common","get","rowSelection","onChange","getCheckboxProps","record","da_id","width","Group","target","dataSource","rowKey","pagination","pageSize","visible","onCancel","okText","cancelText","label","offset","Score","d_id","id","Visitor","showTime","format","render","text","Dorm","Home","option","man","woman","damagenumber","fixed","nofixed","series","xAxis","yAxis","total","gutter","valueStyle","display","Student","SearchData","search","GetData","e","S_name","s_id","SearchOutlined","inputChange","LeftNav","Information","Sider","Layout","Content","Welcome","path","component","Admin","Register","AlertOutlined","SafetyOutlined","PhoneOutlined","MailOutlined","InfoCircleOutlined","TeamOutlined","Maintenance","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80fe971c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login.21dc19ec.jpg\";","export default __webpack_public_path__ + \"static/media/avatar.a8bdbd32.jpg\";","import React, {Component} from 'react';\r\nimport {Form, Input, Button, Checkbox, message,Avatar, Image} from 'antd';\r\nimport axios from \"axios\";\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport './login.css';\r\nimport 'antd/dist/antd.css';\r\nimport logo from '../../images/login.jpg';\r\nimport avatar from '../../images/avatar.jpg';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish=this.onFinish.bind(this);\r\n    };\r\n\r\n\r\n    onFinish(values){\r\n        console.log(\"values: \", values);\r\n        let history = this.props.history;\r\n        axios.post('http://116.62.230.253:8089/dormitory/login',values)\r\n            .then(function (response) {\r\n                sessionStorage.setItem(\"token\", response.data.token);\r\n                sessionStorage.setItem(\"per\", response.data.per);\r\n                console.log(\"localStorage: \", sessionStorage.getItem(\"token\"));\r\n                console.log(\"data.per: \", response.data.per);\r\n                if (response.data.result) {\r\n                    message.success(\"登录成功\");\r\n                    history.push('/dormitory/home');\r\n                    sessionStorage.setItem(\"user\", values.username);\r\n                    //console.log(\"user\",sessionStorage.getItem(\"user\"));\r\n                } else {\r\n                    message.error(\"用户名或者密码错误\");\r\n                }\r\n            })\r\n                .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <img src={logo} className=\"login-img\"/>\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{remember: true}}\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Avatar size={80} className=\"avatar\"\r\n                        src={<Image src={avatar} />}\r\n                    />\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[{required: true, message: 'Please input your Username!'}]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{required: true, message: 'Please input your Password!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                            <Checkbox>Remember me</Checkbox>\r\n                        </Form.Item>\r\n\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Log in\r\n                        </Button>\r\n                        <br/>\r\n                        Or <a href=\"#/register\">register now!</a>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/school.1b37a2aa.jpg\";","import React, {Component} from 'react';\r\nimport {Menu} from 'antd';\r\nimport {\r\n    AppstoreOutlined,\r\n    PieChartOutlined,\r\n    DesktopOutlined,\r\n    ContainerOutlined,\r\n    MailOutlined,\r\n    MessageOutlined,\r\n    CloudOutlined,\r\n    UserOutlined,\r\n    GlobalOutlined\r\n} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\nimport image from \"../../images/school.jpg\";\r\nimport './leftnav.css'\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nclass DLeftNav extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <div style={{height: 730}}>\r\n                <Link to='/dormitory/home'>\r\n                    <img src={image} alt=\"logo\" className=\"leftnav-img\"/>\r\n                    <h1 style={{color: '#FFF6F6', marginLeft: \"35px\"}}>宿舍管理系统</h1>\r\n                </Link>\r\n                <Menu\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    //inlineCollapsed={collapsed}\r\n                >\r\n                    <Menu.Item key=\"1\" icon={<PieChartOutlined/>}>\r\n                        <Link to='/dormitory/home'>\r\n                            首页\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" icon={<DesktopOutlined/>}>\r\n                        <Link to='/dormitory/dorm'>\r\n                            宿舍信息\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\" icon={<MessageOutlined/>}>\r\n                        <Link to='/dormitory/visitor'>\r\n                            访客信息\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\" icon={<ContainerOutlined/>}>\r\n                        <Link to='/dormitory/damage'>\r\n                            损耗物品\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"5\" icon={<CloudOutlined/>}>\r\n                        <Link to='/dormitory/score'>\r\n                            宿舍评分\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"人员信息\">\r\n                        <Menu.Item key=\"6\">\r\n                            <Link to='/dormitory/student'>\r\n                                学生信息\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"7\">\r\n                            <Link to='/dormitory/admin'>\r\n                                管理员信息\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"sub2\" icon={<GlobalOutlined />} title=\"更多\">\r\n                        <Menu.Item key=\"9\">\r\n                            <Link to='/dormitory/Information'>\r\n                                更多信息\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"10\">关于</Menu.Item>\r\n                        <SubMenu key=\"sub3\" title=\"下载\">\r\n                            <Menu.Item key=\"11\">方式一</Menu.Item>\r\n                            <Menu.Item key=\"12\">方式二</Menu.Item>\r\n                        </SubMenu>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}export default DLeftNav;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div style={{height:\"40px\",background:\"#fff\"}}>\r\n            <div style={{margin:\"0 0 0 450px\"}}>\r\n                2020-11-8 学号：3117005051 作者：郑浩斌 (C) 版权所有\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;\r\n","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\n\r\nconst BASE = ''\r\n// 登陆\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')","import React from 'react'\r\nimport './linkbutton.css'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n    return <button {...props} className=\"link-button\"/>\r\n}","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {reqWeather} from '../../api'\r\nimport {Modal} from 'antd'\r\nimport './header.css'\r\nimport LinkButton from '../LinkButton'\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        currentTime: formateDate(Date.now()), // 当前时间字符串\r\n        dayPictureUrl: '', // 天气图片url\r\n        weather: '', // 天气的文本\r\n    }\r\n\r\n    getTime = () => {\r\n        // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n        this.intervalId = setInterval(() => {\r\n            const currentTime = formateDate(Date.now())\r\n            this.setState({currentTime})\r\n        }, 1000)\r\n    }\r\n\r\n    /*\r\n 第一次render()之后执行一次\r\n 一般在此执行异步操作: 发ajax请求/启动定时器\r\n  */\r\n    componentDidMount () {\r\n        // 获取当前的时间\r\n        this.getTime()\r\n        // 获取当前天气\r\n        this.getWeather()\r\n    }\r\n\r\n    /*\r\n    当前组件卸载之前调用\r\n     */\r\n    componentWillUnmount () {\r\n        // 清除定时器\r\n        clearInterval(this.intervalId)\r\n    }\r\n\r\n\r\n    getWeather = async () => {\r\n        // 调用接口请求异步获取数据\r\n        const {dayPictureUrl, weather} = await reqWeather('广州')\r\n        // 更新状态\r\n        this.setState({dayPictureUrl, weather})\r\n    }\r\n\r\n    /*\r\n        退出登陆\r\n   */\r\n    logout = () => {\r\n        // 显示确认框\r\n        Modal.confirm({\r\n            content: '确定退出吗?',\r\n            onOk: () => {\r\n                console.log('OK', this)\r\n                // 删除保存的user数据\r\n                sessionStorage.setItem(\"user\",\"\");\r\n                console.log(\"user: \",sessionStorage.getItem(\"user\"));\r\n                // 跳转到login\r\n                this.props.history.replace('/#')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\" style={{background:\"#fff\"}}>\r\n                <div className=\"header-top\">\r\n                    <span> 欢迎您,</span>\r\n                    {sessionStorage.getItem(\"user\")}\r\n                    <span style={{margin: \"0 0 0 0px\"}}></span>\r\n                    {/*后续设置为button，点击后触发清空用户操作*/}\r\n                    <LinkButton onClick={this.logout}>退出</LinkButton>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{this.state.currentTime}</span>\r\n                        <img src={this.state.dayPictureUrl} className=\"header-img\" alt=\"weather\"/>\r\n                        <span>{this.state.weather}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {message, Button, Divider, Form, Input, InputNumber, Modal, Radio, Table, DatePicker} from \"antd\";\r\n\r\nconst columns = [\r\n\r\n    {\r\n        title: '损耗物品',\r\n        dataIndex: 'damagestation',\r\n    },\r\n    {\r\n        title: '损耗时间',\r\n        dataIndex: 'damagetime',\r\n    },\r\n    {\r\n        title: '是否修复',\r\n        dataIndex: 'isfixed',\r\n    },\r\n    {\r\n        title: '宿舍号',\r\n        dataIndex: 'dormid',\r\n    },\r\n];\r\n\r\nconst layout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 16},\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nclass Damage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectionType: 'checkbox',\r\n            list: [],\r\n            selectedRowsKeys: [],\r\n            confirmvisible: false,\r\n            cancelvisible: false,\r\n            selectedRows:[],\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({selectedRowKeys});\r\n    };\r\n\r\n    ComfirmCancel = () => {\r\n        this.setState({confirmvisible: false});\r\n    };\r\n\r\n    InsertData = (value) => {\r\n        axios.post('http://116.62.230.253:8089/dormitory/damsave',value)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(value));\r\n                //console.log(\"responses: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"插入成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"插入失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        this.setState({confirmvisible:false});\r\n    }\r\n\r\n    DeleteData = () => {\r\n        console.log(\"selectedRows : \", this.state.selectedRows);\r\n        axios.post('http://116.62.230.253:8089/dormitory/damdelete', this.state.selectedRows)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(this.state.selectedRows));\r\n                //console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"删除成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"删除失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({cancelvisible:false});\r\n    }\r\n\r\n    ComfirmshowModal = () => {\r\n        this.setState({confirmvisible: true});\r\n    };\r\n\r\n    Cancel = () => {\r\n        this.setState({cancelvisible: false});\r\n    };\r\n\r\n    CancelshowModal = () => {\r\n        this.setState({cancelvisible: true});\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/damlist')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"显示错误\")\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowsKeys, selectedRows) => {\r\n                console.log('selectedRowKeys', selectedRowsKeys);\r\n                console.log('selectedRows: ', selectedRows);\r\n                this.setState({selectedRowsKeys: selectedRowsKeys});\r\n                this.setState({selectedRows: selectedRows});\r\n            },\r\n\r\n            getCheckboxProps: (record) => ({\r\n                // Column configuration not to be checked\r\n                da_id: record.da_id,\r\n\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div style={{marginLeft: 50, width: 1200}}>\r\n                <br/>\r\n                <Radio.Group\r\n                    onChange={({target: {value}}) => {\r\n                        this.state.selectionType = value\r\n                    }}\r\n                    value={this.state.selectionType}\r\n                >\r\n                    <Radio value=\"checkbox\">Checkbox</Radio>\r\n                </Radio.Group>\r\n\r\n                <Divider/>\r\n\r\n                <Table\r\n                    rowSelection={{\r\n                        type: this.state.selectionType,\r\n                        ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    rowKey={record => record.da_id}\r\n                    pagination={{pageSize: 5}}\r\n                />\r\n                <div>\r\n                    <Button type=\"primary\" onClick={this.ComfirmshowModal}>\r\n                        增加\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"添加数据\"\r\n                        visible={this.state.confirmvisible}\r\n                        onCancel={this.ComfirmCancel}\r\n                        onOk={this.ComfirmCancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Form {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={this.InsertData}>\r\n                            <Form.Item name={['damagestation']} label=\"损耗物品\" rules={[{required: true}]}>\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['damagetime']} label=\"损耗时间\">\r\n                                <DatePicker/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['isfixed']} label=\"是否修复\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['dormid']} label=\"宿舍号\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{...layout.wrapperCol, offset: 11}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    提交\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <b>&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n                    <Button onClick={this.CancelshowModal}>\r\n                        删除\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"提示框\"\r\n                        onOk={this.DeleteData}\r\n                        okText=\"确认\"\r\n                        visible={this.state.cancelvisible}\r\n                        onCancel={this.Cancel}\r\n                        cancelText=\"取消\"\r\n                    >\r\n\r\n                        <p>确认删除吗？</p>\r\n                    </Modal>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}export default Damage;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {message, Button, Divider, Form, Input, InputNumber, Modal, Radio, Table} from \"antd\";\r\n\r\nconst columns = [\r\n\r\n    {\r\n        title: '宿舍评分',\r\n        dataIndex: 'score',\r\n    },\r\n    {\r\n        title: '宿舍号',\r\n        dataIndex: 'dormid',\r\n    },\r\n];\r\n\r\nconst layout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 16},\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nclass Score extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectionType: 'checkbox',\r\n            list: [],\r\n            selectedRowsKeys: [],\r\n            confirmvisible: false,\r\n            cancelvisible: false,\r\n            selectedRows:[],\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({selectedRowKeys});\r\n    };\r\n\r\n    ComfirmCancel = () => {\r\n        this.setState({confirmvisible: false});\r\n    };\r\n\r\n    InsertData = (value) => {\r\n        axios.post('http://116.62.230.253:8089/dormitory/scosave',value)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(value));\r\n                //console.log(\"responses: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"插入成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"插入失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        this.setState({confirmvisible:false});\r\n    }\r\n\r\n    DeleteData = () => {\r\n        console.log(\"selectedRows : \", this.state.selectedRows);\r\n        axios.post('http://116.62.230.253:8089/dormitory/scodelete', this.state.selectedRows)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(this.state.selectedRows));\r\n                //console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"删除成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"删除失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({cancelvisible:false});\r\n    }\r\n\r\n    ComfirmshowModal = () => {\r\n        this.setState({confirmvisible: true});\r\n    };\r\n\r\n    Cancel = () => {\r\n        this.setState({cancelvisible: false});\r\n    };\r\n\r\n    CancelshowModal = () => {\r\n        this.setState({cancelvisible: true});\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/scolist')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"显示错误\");\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowsKeys, selectedRows) => {\r\n                //console.log('selectedRowKeys', selectedRowsKeys);\r\n                console.log('selectedRows: ', selectedRows);\r\n                this.setState({selectedRowsKeys: selectedRowsKeys});\r\n                this.setState({selectedRows: selectedRows});\r\n            },\r\n\r\n            getCheckboxProps: (record) => ({\r\n                // Column configuration not to be checked\r\n                d_id: record.d_id,\r\n\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div style={{marginLeft: 50, width: 1200}}>\r\n                <br/>\r\n                <Radio.Group\r\n                    onChange={({target: {value}}) => {\r\n                        this.state.selectionType = value\r\n                    }}\r\n                    value={this.state.selectionType}\r\n                >\r\n                    <Radio value=\"checkbox\">Checkbox</Radio>\r\n                </Radio.Group>\r\n\r\n                <Divider/>\r\n\r\n                <Table\r\n                    rowSelection={{\r\n                        type: this.state.selectionType,\r\n                        ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    rowKey={record => record.id}\r\n                    pagination={{pageSize: 5}}\r\n                />\r\n                <div>\r\n                    <Button type=\"primary\" onClick={this.ComfirmshowModal}>\r\n                        增加\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"添加数据\"\r\n                        visible={this.state.confirmvisible}\r\n                        onCancel={this.ComfirmCancel}\r\n                        onOk={this.ComfirmCancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Form {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={this.InsertData}>\r\n                            <Form.Item name={['score']} label=\"宿舍评分\" rules={[{required: true}]}>\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['dormid']} label=\"宿舍号\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{...layout.wrapperCol, offset: 11}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    提交\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <b>&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n                    <Button onClick={this.CancelshowModal}>\r\n                        删除\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"提示框\"\r\n                        onOk={this.DeleteData}\r\n                        okText=\"确认\"\r\n                        visible={this.state.cancelvisible}\r\n                        onCancel={this.Cancel}\r\n                        cancelText=\"取消\"\r\n                    >\r\n\r\n                        <p>确认删除吗？</p>\r\n                    </Modal>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}export default Score;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {message, Button, Divider, Form, Input, InputNumber, Modal, Radio, Table, DatePicker} from \"antd\";\r\n\r\nconst columns = [\r\n\r\n    {\r\n        title: '访客信息',\r\n        dataIndex: 'visitorname',\r\n    },\r\n    {\r\n        title: '访问学生',\r\n        dataIndex: 'studentid',\r\n    },\r\n    {\r\n        title: '访问时间',\r\n        dataIndex: 'starttime',\r\n    },\r\n    {\r\n        title: '离开时间',\r\n        dataIndex: 'endtime',\r\n    },\r\n];\r\n\r\nconst layout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 16},\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\n\r\nclass Visitor extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectionType: 'checkbox',\r\n            list: [],\r\n            selectedRowsKeys: [],\r\n            confirmvisible: false,\r\n            cancelvisible: false,\r\n            selectedRows:[],\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({selectedRowKeys});\r\n    };\r\n\r\n    ComfirmCancel = () => {\r\n        this.setState({confirmvisible: false});\r\n    };\r\n\r\n    InsertData = (value) => {\r\n        axios.post('http://116.62.230.253:8089/dormitory/vissave',value)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(value));\r\n                console.log(\"responses: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"插入成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"插入失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        this.setState({confirmvisible:false});\r\n    }\r\n\r\n    DeleteData = () => {\r\n        console.log(\"selectedRows : \", this.state.selectedRows);\r\n        axios.post('http://116.62.230.253:8089/dormitory/visdelete', this.state.selectedRows)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(this.state.selectedRows));\r\n                //console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"删除成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"删除失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({cancelvisible:false});\r\n    }\r\n\r\n    ComfirmshowModal = () => {\r\n        this.setState({confirmvisible: true});\r\n    };\r\n\r\n    Cancel = () => {\r\n        this.setState({cancelvisible: false});\r\n    };\r\n\r\n    CancelshowModal = () => {\r\n        this.setState({cancelvisible: true});\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/vislist')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"显示错误\");\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowsKeys, selectedRows) => {\r\n                //console.log('selectedRowKeys', selectedRowsKeys);\r\n                console.log('selectedRows: ', selectedRows);\r\n                this.setState({selectedRowsKeys: selectedRowsKeys});\r\n                this.setState({selectedRows: selectedRows});\r\n            },\r\n\r\n            getCheckboxProps: (record) => ({\r\n                // Column configuration not to be checked\r\n                d_id: record.d_id,\r\n\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div style={{marginLeft: 50, width: 1200}}>\r\n                <br/>\r\n                <Radio.Group\r\n                    onChange={({target: {value}}) => {\r\n                        this.state.selectionType = value\r\n                    }}\r\n                    value={this.state.selectionType}\r\n                >\r\n                    <Radio value=\"checkbox\">Checkbox</Radio>\r\n                </Radio.Group>\r\n\r\n                <Divider/>\r\n\r\n                <Table\r\n                    rowSelection={{\r\n                        type: this.state.selectionType,\r\n                        ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    rowKey={record => record.id}\r\n                    pagination={{pageSize: 5}}\r\n                />\r\n                <div>\r\n                    <Button type=\"primary\" onClick={this.ComfirmshowModal}>\r\n                        增加\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"添加数据\"\r\n                        visible={this.state.confirmvisible}\r\n                        onCancel={this.ComfirmCancel}\r\n                        onOk={this.ComfirmCancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Form {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={this.InsertData}>\r\n                            <Form.Item name={['visitorname']} label=\"访客信息\" rules={[{required: true}]}>\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['studentid']} label=\"访问学生\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['starttime']} label=\"访问时间\">\r\n                                <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['endtime']} label=\"离开时间\">\r\n                                <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['day']} label=\"访问日期\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{...layout.wrapperCol, offset: 11}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    提交\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <b>&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n                    <Button onClick={this.CancelshowModal}>\r\n                        删除\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"提示框\"\r\n                        onOk={this.DeleteData}\r\n                        okText=\"确认\"\r\n                        visible={this.state.cancelvisible}\r\n                        onCancel={this.Cancel}\r\n                        cancelText=\"取消\"\r\n                    >\r\n\r\n                        <p>确认删除吗？</p>\r\n                    </Modal>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}export default Visitor;","import React, {Component} from 'react';\r\nimport {message, Form, Input, InputNumber, Table, Radio, Divider, Modal, Button, PaginationType as pageSize} from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n    {\r\n        title: '宿舍号',\r\n        dataIndex: 'd_id',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: '总床位',\r\n        dataIndex: 'total',\r\n    },\r\n    {\r\n        title: '已用床位',\r\n        dataIndex: 'used',\r\n    },\r\n    {\r\n        title: '宿舍长',\r\n        dataIndex: 'dormadmin',\r\n    },\r\n];\r\n\r\n\r\nconst layout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 16},\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\n\r\nclass Dorm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectionType: 'checkbox',\r\n            list: [],\r\n            selectedRowsKeys: [],\r\n            confirmvisible: false,\r\n            cancelvisible: false,\r\n            selectedRows:[],\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({selectedRowKeys});\r\n    };\r\n\r\n    ComfirmCancel = () => {\r\n        this.setState({confirmvisible: false});\r\n    };\r\n\r\n    InsertData = (value) => {\r\n        axios.post('http://116.62.230.253:8089/dormitory/dormsave',value)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(value));\r\n                //console.log(\"responses: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"插入成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"插入失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        this.setState({confirmvisible:false});\r\n    }\r\n\r\n    DeleteData = () => {\r\n        console.log(\"selectedRows : \", this.state.selectedRows);\r\n        axios.post('http://116.62.230.253:8089/dormitory/dormdelete', this.state.selectedRows)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(this.state.selectedRows));\r\n                //console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"删除成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"删除失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({cancelvisible:false});\r\n    }\r\n\r\n    ComfirmshowModal = () => {\r\n        this.setState({confirmvisible: true});\r\n    };\r\n\r\n    Cancel = () => {\r\n        this.setState({cancelvisible: false});\r\n    };\r\n\r\n    CancelshowModal = () => {\r\n        this.setState({cancelvisible: true});\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/dormlist')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"显示错误\");\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowsKeys, selectedRows) => {\r\n                //console.log('selectedRowKeys', selectedRowsKeys);\r\n                console.log('selectedRows: ', selectedRows);\r\n                this.setState({selectedRowsKeys: selectedRowsKeys});\r\n                this.setState({selectedRows: selectedRows});\r\n            },\r\n\r\n            getCheckboxProps: (record) => ({\r\n                // Column configuration not to be checked\r\n                d_id: record.d_id,\r\n\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div style={{marginLeft: 50, width: 1200}}>\r\n                <br/>\r\n                <Radio.Group\r\n                    onChange={({target: {value}}) => {\r\n                        this.state.selectionType = value\r\n                    }}\r\n                    value={this.state.selectionType}\r\n                >\r\n                    <Radio value=\"checkbox\">Checkbox</Radio>\r\n                </Radio.Group>\r\n\r\n                <Divider/>\r\n\r\n                <Table\r\n                    rowSelection={{\r\n                        type: this.state.selectionType,\r\n                        ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    rowKey={record => record.id}\r\n                    pagination={{pageSize: 5}}\r\n                />\r\n                <div>\r\n                    <Button type=\"primary\" onClick={this.ComfirmshowModal}>\r\n                        增加\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"添加数据\"\r\n                        visible={this.state.confirmvisible}\r\n                        onCancel={this.ComfirmCancel}\r\n                        onOk={this.ComfirmCancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Form {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={this.InsertData}>\r\n                            <Form.Item name={['d_id']} label=\"宿舍号\" rules={[{required: true}]}>\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['total']} label=\"总床位\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['used']} label=\"已用床位\">\r\n                                <InputNumber/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['dormadmin']} label=\"宿舍长\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{...layout.wrapperCol, offset: 11}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    提交\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <b>&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n                    <Button onClick={this.CancelshowModal}>\r\n                        删除\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"提示框\"\r\n                        onOk={this.DeleteData}\r\n                        okText=\"确认\"\r\n                        visible={this.state.cancelvisible}\r\n                        onCancel={this.Cancel}\r\n                        cancelText=\"取消\"\r\n                    >\r\n\r\n                        <p>确认删除吗？</p>\r\n                    </Modal>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dorm;","import React, {Component} from 'react';\r\nimport {Statistic, Card, Row, Col} from 'antd';\r\nimport {ArrowUpOutlined, ArrowDownOutlined} from '@ant-design/icons';\r\nimport './home.css'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport axios from \"axios\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let option = {}\r\n        this.state = {\r\n            option,\r\n            number: 0,\r\n            man:0,\r\n            woman:0,\r\n            damagenumber:0,\r\n            fixed:0,\r\n            nofixed:0,\r\n            series:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //console.log(\"seriesbegin: \",this.state.series);\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/getviscount')\r\n            .then(response => {\r\n                console.log(\"response: \", response.data.datalist);\r\n                if (response.data.state) {\r\n                    this.setState({series: [response.data.datalist]});\r\n                    console.log(\"mon: \", this.state.series);\r\n                    let option = this.state.option = {\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value'\r\n                        },\r\n                        series: [{\r\n                            data: this.state.series[0],\r\n                            type: 'line'\r\n                        }]\r\n                    };\r\n                    this.setState({\r\n                        option\r\n                    })\r\n                } else {\r\n                    //弹窗告知用户权限\r\n\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/getusercount')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({number: response.data.datalist[0].total});\r\n                    this.setState({man: response.data.datalist[0].man});\r\n                    this.setState({woman: response.data.datalist[0].woman});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/getdamcount')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({damagenumber: response.data.datalist[0].damagenumber});\r\n                    this.setState({fixed: response.data.datalist[0].fixed});\r\n                    this.setState({nofixed: response.data.datalist[0].nofixed});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"site-statistic-demo-card\">\r\n                <Row gutter={12}>\r\n                    <Col span={6}>\r\n                        <Card style={{width: 450}} title={\"用户数量统计\"}>\r\n                            <Row gutter={12}>\r\n                                <Col span={6}>\r\n                                    <Statistic title=\"Active Users\" value={this.state.number}/>\r\n                                </Col>\r\n                                <Col span={6} offset={2}>\r\n                                    <Statistic title=\"Man\" value={this.state.man} valueStyle={{color:'#87ceeb'}}/>\r\n                                </Col>\r\n                                <Col span={6} offset={2}>\r\n                                    <Statistic title=\"Woman\" value={this.state.woman} valueStyle={{color: '#ee82ee'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                        <br/>\r\n                        <br/>\r\n                        <Card style={{width: 450}} title={\"损耗物品统计\"}>\r\n                            <Row gutter={12}>\r\n                                <Col span={8}>\r\n                                    <Statistic title=\"Total Damage items\" value={this.state.damagenumber}/>\r\n                                </Col>\r\n                                <Col span={6} offset={2}>\r\n                                    <Statistic title=\"Isfixed\" value={this.state.fixed} valueStyle={{color:'#32cd32'}}/>\r\n                                </Col>\r\n                                <Col span={6} offset={2}>\r\n                                    <Statistic title=\"Not fixed\" value={this.state.nofixed} valueStyle={{color: '#ff0000'}}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={15} offset={3}>\r\n                        <Card style={{width: '100%', display: 'table', height: 200}} title=\"访客数量统计\">\r\n                            <ReactEcharts option={this.state.option}/>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {message, Button, Divider, Form, Input, InputNumber, Modal, Radio, Table, DatePicker} from \"antd\";\r\nimport {SearchOutlined} from '@ant-design/icons';\r\nconst columns = [\r\n\r\n    {\r\n        title: '学号',\r\n        dataIndex: 's_id',\r\n    },\r\n    {\r\n        title: '姓名',\r\n        dataIndex: 's_name',\r\n    },\r\n    {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n    },\r\n    {\r\n        title: '出生日期',\r\n        dataIndex: 'birthday',\r\n    },\r\n    {\r\n        title: 'qq',\r\n        dataIndex: 'qq',\r\n    },\r\n    {\r\n        title: '手机号',\r\n        dataIndex: 'mobile',\r\n    },\r\n    {\r\n        title: '宿舍',\r\n        dataIndex: 'dormid',\r\n    },\r\n];\r\n\r\nconst layout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 16},\r\n};\r\n\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        number: '${label} is not a validate number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be between ${min} and ${max}',\r\n    },\r\n};\r\n\r\nclass Student extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectionType: 'checkbox',\r\n            list: [],\r\n            selectedRowsKeys: [],\r\n            confirmvisible: false,\r\n            cancelvisible: false,\r\n            selectedRows:[],\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({selectedRowKeys});\r\n    };\r\n\r\n    ComfirmCancel = () => {\r\n        this.setState({confirmvisible: false});\r\n    };\r\n\r\n    InsertData = (value) => {\r\n        axios.post('http://116.62.230.253:8089/dormitory/stusave',value)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(value));\r\n                //console.log(\"responses: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"插入成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"插入失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        this.setState({confirmvisible:false});\r\n    }\r\n\r\n    SearchData = () => {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        console.log(\"value: \", this.state.search);\r\n        axios.post('http://116.62.230.253:8089/dormitory/stusearchlist', this.state.search)\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"不存在该数据\")\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    GetData = () => {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/studentlist')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"显示错误\")\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    DeleteData = () => {\r\n        console.log(\"selectedRows : \", this.state.selectedRows);\r\n        axios.post('http://116.62.230.253:8089/dormitory/studelete', this.state.selectedRows)\r\n            .then(response => {\r\n                //console.log(\"axios.values: \", JSON.stringify(this.state.selectedRows));\r\n                //console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    message.success(\"删除成功\");\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"删除失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        this.setState({cancelvisible:false});\r\n    }\r\n\r\n    ComfirmshowModal = () => {\r\n        this.setState({confirmvisible: true});\r\n    };\r\n\r\n    Cancel = () => {\r\n        this.setState({cancelvisible: false});\r\n    };\r\n\r\n    CancelshowModal = () => {\r\n        this.setState({cancelvisible: true});\r\n    };\r\n\r\n    inputChange(e) {\r\n        this.setState({\r\n            search: {S_name: e.target.value}\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/studentlist')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"显示错误\")\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowsKeys, selectedRows) => {\r\n                console.log('selectedRowKeys', selectedRowsKeys);\r\n                console.log('selectedRows: ', selectedRows);\r\n                this.setState({selectedRowsKeys: selectedRowsKeys});\r\n                this.setState({selectedRows: selectedRows});\r\n            },\r\n\r\n            getCheckboxProps: (record) => ({\r\n                // Column configuration not to be checked\r\n                s_id: record.s_id,\r\n\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div style={{marginLeft: 50, width: 1200}}>\r\n                <br/>\r\n                <Radio.Group\r\n                    onChange={({target: {value}}) => {\r\n                        this.state.selectionType = value\r\n                    }}\r\n                    value={this.state.selectionType}\r\n                >\r\n                </Radio.Group>\r\n                <Input placeholder ='请输入名字关键字' style={{width: '30%'}} prefix={<SearchOutlined/>} onChange={(e) => this.inputChange(e)}/>\r\n                <b>&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n                <Button type=\"primary\" onClick={this.SearchData} >\r\n                    搜索\r\n                </Button>\r\n                <b>&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n                <Button type=\"primary\" onClick={this.GetData}>\r\n                    返回\r\n                </Button>\r\n                <Divider/>\r\n\r\n                <Table\r\n                    rowSelection={{\r\n                        type: this.state.selectionType,\r\n                        ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    rowKey={record => record.s_id}\r\n                    pagination={{pageSize: 5}}\r\n                />\r\n                <div>\r\n                    <Button type=\"primary\" onClick={this.ComfirmshowModal}>\r\n                        增加\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"添加数据\"\r\n                        visible={this.state.confirmvisible}\r\n                        onCancel={this.ComfirmCancel}\r\n                        onOk={this.ComfirmCancel}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Form {...layout} name=\"nest-messages\" validateMessages={validateMessages} onFinish={this.InsertData}>\r\n                            <Form.Item name={['S_id']} label=\"学号\" rules={[{required: true}]}>\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['S_name']} label=\"姓名\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['sex']} label=\"性别\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['birthday']} label=\"生日\">\r\n                                <DatePicker/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['qq']} label=\"qq\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['mobile']} label=\"手机号\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item name={['dormid']} label=\"宿舍号\">\r\n                                <Input/>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{...layout.wrapperCol, offset: 11}}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    提交\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <b>&nbsp;&nbsp;&nbsp;&nbsp;</b>\r\n                    <Button onClick={this.CancelshowModal}>\r\n                        删除\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"提示框\"\r\n                        onOk={this.DeleteData}\r\n                        okText=\"确认\"\r\n                        visible={this.state.cancelvisible}\r\n                        onCancel={this.Cancel}\r\n                        cancelText=\"取消\"\r\n                    >\r\n\r\n                        <p>确认删除吗？</p>\r\n                    </Modal>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}export default Student;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {message, Button, Divider, Form, Input, InputNumber, Modal, Radio, Table, DatePicker} from \"antd\";\r\n\r\nconst columns = [\r\n\r\n    {\r\n        title: '工号',\r\n        dataIndex: 'id',\r\n    },\r\n    {\r\n        title: '姓名',\r\n        dataIndex: 'userName',\r\n    },\r\n    {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n    },\r\n    {\r\n        title: '手机号',\r\n        dataIndex: 'phone',\r\n    },\r\n    {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n    },\r\n];\r\n\r\n\r\nclass Damage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectionType: 'checkbox',\r\n            list: [],\r\n            selectedRowsKeys: [],\r\n            selectedRows: [],\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({selectedRowKeys});\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        axios.defaults.headers.common['Authorization'] = sessionStorage.getItem(\"token\")\r\n        axios.get('http://116.62.230.253:8089/dormitory/adminlist')\r\n            .then(response => {\r\n                console.log(\"response: \", response);\r\n                if (response.data.state) {\r\n                    this.setState({list: response.data.datalist});\r\n                } else {\r\n                    //弹窗告知用户权限\r\n                    message.error(\"显示错误\")\r\n                }\r\n                console.log(\"sessionStorage: \", sessionStorage.getItem(\"token\"));\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    render() {\r\n        const rowSelection = {\r\n            onChange: (selectedRowsKeys, selectedRows) => {\r\n                console.log('selectedRowKeys', selectedRowsKeys);\r\n                console.log('selectedRows: ', selectedRows);\r\n                this.setState({selectedRowsKeys: selectedRowsKeys});\r\n                this.setState({selectedRows: selectedRows});\r\n            },\r\n\r\n            getCheckboxProps: (record) => ({\r\n                // Column configuration not to be checked\r\n                da_id: record.da_id,\r\n\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div style={{marginLeft: 50, width: 1200}}>\r\n                <br/>\r\n                <Radio.Group\r\n                    onChange={({target: {value}}) => {\r\n                        this.state.selectionType = value\r\n                    }}\r\n                    value={this.state.selectionType}\r\n                >\r\n                    <Radio value=\"checkbox\">Checkbox</Radio>\r\n                </Radio.Group>\r\n\r\n                <Divider/>\r\n\r\n                <Table\r\n                    rowSelection={{\r\n                        type: this.state.selectionType,\r\n                        ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    rowKey={record => record.da_id}\r\n                    pagination={{pageSize: 5}}\r\n                />\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Damage;","import React, {Component} from 'react';\r\nimport {Menu} from 'antd';\r\nimport {\r\n    AppstoreOutlined,\r\n    PieChartOutlined,\r\n    DesktopOutlined,\r\n    ContainerOutlined,\r\n    MailOutlined,\r\n    MessageOutlined,\r\n    CloudOutlined,\r\n    UserOutlined,\r\n    GlobalOutlined\r\n} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\nimport image from \"../../images/school.jpg\";\r\nimport './leftnav.css'\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nclass LeftNav extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <div style={{height: 730}}>\r\n                <Link to='/welcome'>\r\n                    <img src={image} alt=\"logo\" className=\"leftnav-img\"/>\r\n                    <h1 style={{color: '#FFF6F6', marginLeft: \"35px\"}}>宿舍管理系统</h1>\r\n                </Link>\r\n                <Menu\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    //inlineCollapsed={collapsed}\r\n                >\r\n                    <Menu.Item key=\"1\" icon={<PieChartOutlined/>}>\r\n                        <Link to='/dormitory/home'>\r\n                            首页\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" icon={<DesktopOutlined/>}>\r\n                        <Link to='/dormitory/dorm'>\r\n                            宿舍信息\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"4\" icon={<ContainerOutlined/>}>\r\n                        <Link to='/dormitory/damage'>\r\n                            损耗物品\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"人员信息\">\r\n                        <Menu.Item key=\"6\">\r\n                            <Link to='/dormitory/student'>\r\n                                学生信息\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"7\">\r\n                            <Link to='/dormitory/admin'>\r\n                                管理员信息\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}export default LeftNav;","import React, {Component} from 'react';\r\n\r\nclass Information extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{marginLeft: 50, width: 1200}}>\r\n                <br/>\r\n                <h1>1.损耗物品信息中dormid是外键，要注意只有存在的宿舍才能插入</h1>\r\n                <h1>2.访客信息中studentid是外键，要注意只有存在的学生号才能插入。并且人数涉及首页的统计图统计</h1>\r\n                <h1>3.触发器的设计是在宿舍信息删除时，宿舍评分信息也会级联删除</h1>\r\n                <h1>4.宿舍信息中dormadmind,D_id是唯一性约束，不可以出现相同的dormadmind,D_id</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Information;","import React, {Component} from 'react';\r\nimport {Layout} from 'antd';\r\nimport LeftNav from \"../../component/LeftNav/index\";\r\nimport Footer from \"../../component/Footer\";\r\nimport Header from \"../../component/Header\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Damage from '../../page/damage';\r\nimport Score from '../../page/score';\r\nimport Visitor from '../../page/visitor';\r\nimport Dorm from '../../page/dorm';\r\nimport Home from '../../page/home';\r\nimport Student from '../../page/student';\r\nimport Admin from '../../page/admin';\r\nimport './welcome.css'\r\nimport DLeftNav from \"../../component/LeftNav/damleft\";\r\nimport Information from \"../information\";\r\n\r\nconst {Sider, Content} = Layout;\r\n\r\nclass Welcome extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Sider>\r\n                    {\r\n                        sessionStorage.getItem(\"per\") === \"1\" ? <LeftNav/> : <DLeftNav/>\r\n                    }\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <Header/>\r\n                    <br/>\r\n                    <Content className=\"site-layout-background\">\r\n                        <Switch>\r\n                            <div>\r\n                                <Route path=\"/dormitory/home\" component={Home}/>\r\n                                <Route path=\"/dormitory/dorm\" component={Dorm}/>\r\n                                <Route path=\"/dormitory/visitor\" component={Visitor}/>\r\n                                <Route path=\"/dormitory/damage\" component={Damage}/>\r\n                                <Route path=\"/dormitory/score\" component={Score}/>\r\n                                <Route path=\"/dormitory/student\" component={Student}/>\r\n                                <Route path=\"/dormitory/admin\" component={Admin}/>\r\n                                <Route path=\"/dormitory/information\" component={Information}/>\r\n                            </div>\r\n                        </Switch>\r\n                    </Content>\r\n                    <br/>\r\n                    <Footer/>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome;","export default __webpack_public_path__ + \"static/media/register.06e33b06.jpg\";","import React, {Component} from \"react\";\r\nimport background from \"../../images/register.jpg\";\r\nimport {Button, Checkbox, Form, Input, message} from \"antd\";\r\nimport {\r\n    LockOutlined,\r\n    UserOutlined,\r\n    MailOutlined,\r\n    PhoneOutlined,\r\n    InfoCircleOutlined,\r\n    TeamOutlined,\r\n    AlertOutlined,\r\n    SafetyOutlined\r\n} from \"@ant-design/icons\";\r\nimport './register.css';\r\nimport axios from \"axios\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish=this.onFinish.bind(this);\r\n    };\r\n\r\n    onFinish(values){\r\n        console.log(\"values: \", values);\r\n        let history = this.props.history;\r\n        axios.post('http://116.62.230.253:8089/dormitory/register',values)\r\n            .then(response => {\r\n                console.log(\"data: \", response.data);\r\n                if (response.data.state) {\r\n                    message.success(\"注册成功\")\r\n                    history.push('/login');\r\n                    //console.log(\"user\",sessionStorage.getItem(\"user\"));\r\n                } else {\r\n                    message.error(\"注册失败\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={background} className=\"register-img\"/>\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"register-form\"\r\n                    initialValues={{remember: true}}\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <h3 className=\"h3\">Register</h3>\r\n                    <Form.Item\r\n                        name=\"id\"\r\n                        rules={[{required: true, message: 'Please input your Id!'}]}\r\n                    >\r\n                        <Input prefix={<AlertOutlined className=\"site-form-item-icon\"/>} placeholder=\"Id\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[{required: true, message: 'Please input your Username!'}]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{required: true, message: 'Please input your Password!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"permission\"\r\n                        rules={[{required: true, message: 'Please input your Permission!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<SafetyOutlined className=\"site-form-item-icon\"/>}\r\n                            type=\"permission\"\r\n                            placeholder=\"Permission\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        rules={[{required: true, message: 'Please input your Phone!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<PhoneOutlined className=\"site-form-item-icon\"/>}\r\n                            placeholder=\"Phone\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        rules={[{required: true, message: 'Please input your Email!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<MailOutlined className=\"site-form-item-icon\"/>}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"age\"\r\n                        rules={[{required: true, message: 'Please input your Age!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<InfoCircleOutlined className=\"site-form-item-icon\"/>}\r\n                            placeholder=\"Age\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"sex\"\r\n                        rules={[{required: true, message: 'Please input your Sex!'}]}\r\n                    >\r\n                        <Input\r\n                            prefix={<TeamOutlined className=\"site-form-item-icon\"/>}\r\n                            placeholder=\"Sex\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Register\r\n                        </Button>\r\n                        <br/>\r\n                        Or <a href=\"#\">return login</a>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React, {Component} from 'react';\r\nimport {Layout} from 'antd';\r\nimport LeftNav from \"../../component/LeftNav/damleft\";\r\nimport Footer from \"../../component/Footer\";\r\nimport Header from \"../../component/Header\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Damage from '../../page/damage';\r\nimport Score from '../../page/score';\r\nimport Visitor from '../../page/visitor';\r\nimport Dorm from '../../page/dorm';\r\nimport Home from '../../page/home';\r\nimport Student from '../../page/student';\r\nimport Admin from '../../page/admin';\r\nimport './maintence.css'\r\n\r\nconst {Sider, Content} = Layout;\r\n\r\nclass Maintenance extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <Layout>\r\n                <Sider>\r\n                    <LeftNav/>\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <Header/>\r\n                    <br/>\r\n                    <Content className=\"site-layout-background\">\r\n                        <Switch>\r\n                            <div>\r\n                                <Route path=\"/dormitory/home\" component={Home}/>\r\n                                <Route path=\"/dormitory/dorm\" component={Dorm}/>\r\n                                <Route path=\"/dormitory/damage\" component={Damage}/>\r\n                                <Route path=\"/dormitory/student\" component={Student}/>\r\n                                <Route path=\"/dormitory/admin\" component={Admin}/>\r\n                            </div>\r\n                        </Switch>\r\n                    </Content>\r\n                    <br/>\r\n                    <Footer/>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}export default Maintenance;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Login from \"./page/login\";\nimport Welcome from \"./page/welcome\";\nimport Register from \"./page/register\";\nimport Maintenance from \"./page/maintenance\";\n\nfunction App() {\n  return (\n      <Router>\n        <Switch>\n            <Route path=\"/dormitory\" component={Welcome}/>\n            <Route path=\"/maintenance\" component={Maintenance}/>\n            <Route path=\"/register\" component={Register}/>\n            <Route path=\"/\" component={Login}/>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './page/login';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}